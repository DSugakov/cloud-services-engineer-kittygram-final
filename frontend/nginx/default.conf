server {
    listen 80;
    server_name _;
    server_tokens off;

    # Отключаем кэширование для отладки
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    expires off;

    # Добавляем заголовки CORS
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # Приоритетные локации должны быть выше
    location /admin/ {
        proxy_pass http://backend:8000/admin/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/ {
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location ~ ^/static/js/(.+)$ {
        try_files $uri /static/js/s/$1 =404;
    }

    location /static/admin/ {
        alias /var/html/static/admin/;
        try_files $uri $uri/ =404;
    }

    location /static/rest_framework/ {
        alias /var/html/static/rest_framework/;
        try_files $uri $uri/ =404;
    }

    location /static/ {
        alias /var/html/static/;
        try_files $uri $uri/ =404;
    }

    location /media/ {
        alias /var/html/media/;
        try_files $uri $uri/ =404;
    }

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
} 